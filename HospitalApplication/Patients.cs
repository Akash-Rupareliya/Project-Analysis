//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HospitalApplication
{
    using System;
    using System.Collections.Generic;
    
    public partial class Patients
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Patients()
        {
            this.Assigns = new HashSet<Assigns>();
            this.Diagnosises = new HashSet<Diagnosises>();
            this.DrugTimes = new HashSet<DrugTimes>();
            this.Prescribes = new HashSet<Prescribes>();
        }
    
        public int PatientId { get; set; }
        public string PatientName { get; set; }
        public string PatientPhoneNumber { get; set; }
        public int PatientAge { get; set; }
        public string PatientAddress { get; set; }
        public string PatientGender { get; set; }
        public string PatientSymptom { get; set; }
        public Nullable<System.DateTime> RegistrationDate { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Assigns> Assigns { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Diagnosises> Diagnosises { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DrugTimes> DrugTimes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Prescribes> Prescribes { get; set; }
    
        public void GetData()
        {
            Console.WriteLine("Enter Patient Name : ");
            PatientName = Console.ReadLine();
            Console.WriteLine("Enter Patient Age : ");
            PatientAge = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Enter Patient Gender");
            PatientGender = Console.ReadLine();
            Console.WriteLine(" Enter Patient Phone Number : ");
            PatientPhoneNumber = Console.ReadLine();
            Console.WriteLine("Enter Patient Address");
            PatientAddress = Console.ReadLine();
            Console.WriteLine("Enter Patient Symptom :");
            PatientSymptom = Console.ReadLine();
        }
        public void List()
        {
            var db = new HospitalDbEntities();
            var patientList = db.Patients;
            try
            {
                Console.WriteLine("Name \t Age \t Gender  Mobile Number");
                foreach(var patient in patientList)
                {
                    Console.WriteLine(patient.PatientName+"    " + patient.PatientAge+"      " + patient.PatientGender +"     "+ patient.PatientPhoneNumber); 
                }
            }
            catch(Exception e)
            {
                Console.WriteLine("There are no patients");
            }
        }
    }
}
